内建函数
    open()
    file()

file_object=open(file_name,access_mode='r',buffering=-1)
        access_mode     文件打开的模式 r w a(追加) U(通用换行符支持)||使用r或U打开的文件必须存在||使用w打开的文件若存在则首先清空然后(重新)创建
        buffering       指示访问文件所采用的缓冲方式 0表示不缓冲 1表示只缓冲一行数据 其它大于1的值代表使用给定值作为缓冲区大小. 不提供该参数或者给定负值代表使用系统默认缓冲机制


访问模式
    r 以读方式打开
    rU 或 Ua 以读方式打开, 同时提供通用换行符支持 (PEP 278)
    w 以写方式打开 (必要时清空)
    a 以追加模式打开 (从 EOF 开始, 必要时创建新文件)
    r+ 以读写模式打开
    w+ 以读写模式打开 (参见 w )
    a+ 以读写模式打开 (参见 a )
    rb 以二进制读模式打开
    wb 以二进制写模式打开 (参见 w )
    ab 以二进制追加模式打开 (参见 a )
    rb+ 以二进制读写模式打开 (参见 r+ )
    wb+ 以二进制读写模式打开 (参见 w+ )
    ab+ 以二进制读写模式打开 (参见 a+ )


file()
file()和open()函数具有相同的功能, 可以任意替换.任何使用open()的地方,都可以使用file()替换它

一般说来, 建议使用open()来读写文件, 在您想说明您在处理文件对象时使用file(), 例如 if instance(f, file)

处理方法
    输入
    输出
    文件内移动
    其他


输入
    read()          读取字节到字符串中, 最多读取给定数目个字节. 如果没有给定size参数(默认值为 -1)或者size值为负, 文件将被读取直至末尾
    readline()      读取打开文件的一行(读取下个行结束符之前的所有字节)
    readlines()     读取所有(剩余的)行然后把它们作为一个字符串列表返回
    xreadlines()
    
输出
    write()         把含有文本数据或二进制数据块的字符串写入到文件中
    writelines()    接受一个字符串列表作为参数, 将它们写入文件
    
移动
    seek()          在文件中移动文件指针到不同的位置
    text()          文件指针在文件中的位置
    
其他
    close()
    fileno()        返回打开文件的描述符
    flush()         把内部缓冲区中的数据立刻写入文件
    isatty()        是一个布尔内建函数, 当文件是一个类 tty 设备时返回 True , 否则返回False
    truncate()      将文件截取到当前文件指针位置或者到给定 size , 以字节为单位
